{"mappings":"AAeAA,KAAKC,iBAAiB,WAAW,KAC/BD,KAAKE,iBAGPF,KAAKC,iBAAiB,YAAaE,IACjCA,EAAMC,UAAUJ,KAAKK,QAAQC,YAG/BN,KAAKC,iBAAiB,SAAUE,IAC9BA,EAAMI,YApBRC,eAA2BC,GACzB,MAAMC,QAAcC,OAAOC,KALb,uBAMd,IACE,MAAMC,QAAiBC,MAAML,GAE7B,OADAC,EAAMK,IAAIN,EAASI,EAASG,SACrBH,EACP,MAAOI,GACP,aAAaP,EAAMQ,MAAMT,IAaTU,CAAYhB,EAAMM","sources":["./src/offlineSW.js"],"sourcesContent":["const version = \"recorder-offline-v1\";\n\n// Attempts to fetch a resource from the server.\n// Falls back to the local cache if the server is unavailable.\nasync function getResource(request) {\n  const cache = await caches.open(version);\n  try {\n    const response = await fetch(request);\n    cache.put(request, response.clone());\n    return response;\n  } catch (error) {\n    return await cache.match(request);\n  }\n}\n\nself.addEventListener(\"install\", () => {\n  self.skipWaiting();\n});\n\nself.addEventListener(\"activate\", (event) => {\n  event.waitUntil(self.clients.claim());\n});\n\nself.addEventListener(\"fetch\", (event) => {\n  event.respondWith(getResource(event.request));\n});\n"],"names":["self","addEventListener","skipWaiting","event","waitUntil","clients","claim","respondWith","async","request","cache","caches","open","response","fetch","put","clone","error","match","getResource"],"version":3,"file":"offlineSW.js.map"}